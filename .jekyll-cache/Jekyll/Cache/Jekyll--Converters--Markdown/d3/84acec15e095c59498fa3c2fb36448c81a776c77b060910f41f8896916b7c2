I"nE<ul id="markdown-toc">
  <li><a href="#thinkphp目录结构" id="markdown-toc-thinkphp目录结构">ThinkPHP目录结构</a>    <ul>
      <li><a href="#参考" id="markdown-toc-参考">参考</a></li>
      <li><a href="#结构简介" id="markdown-toc-结构简介">结构简介</a></li>
      <li><a href="#主目录" id="markdown-toc-主目录">主目录</a></li>
      <li><a href="#入口文件indexphp" id="markdown-toc-入口文件indexphp">入口文件<code class="highlighter-rouge">index.php</code></a></li>
      <li><a href="#应用模块目录" id="markdown-toc-应用模块目录">应用/模块目录</a>        <ul>
          <li><a href="#默认模块" id="markdown-toc-默认模块">默认模块</a></li>
          <li><a href="#应用公共模块common" id="markdown-toc-应用公共模块common">应用公共模块<code class="highlighter-rouge">Common</code></a></li>
          <li><a href="#模块内部结构" id="markdown-toc-模块内部结构">模块内部结构</a>            <ul>
              <li><a href="#conf配置文件目录" id="markdown-toc-conf配置文件目录"><code class="highlighter-rouge">Conf</code>配置文件目录</a></li>
              <li><a href="#控制器" id="markdown-toc-控制器">控制器</a></li>
            </ul>
          </li>
          <li><a href="#url规则" id="markdown-toc-url规则">URL规则</a>            <ul>
              <li><a href="#1-普通模式" id="markdown-toc-1-普通模式">1 普通模式</a></li>
              <li><a href="#2-pathinfo模式" id="markdown-toc-2-pathinfo模式">2 PATHINFO模式</a></li>
              <li><a href="#3-rewrite模式" id="markdown-toc-3-rewrite模式">3 REWRITE模式</a></li>
              <li><a href="#4-兼容模式" id="markdown-toc-4-兼容模式">4 兼容模式</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="thinkphp目录结构">ThinkPHP目录结构</h1>

<h2 id="参考">参考</h2>
<p><a href="https://www.kancloud.cn/thinkphp/thinkphp_quickstart/2138">ThinkPHP3.2.3快速入门
</a>
<br /><a href="https://my.oschina.net/lantianbaiyun/blog/476128">ThinkPHP 新建控制器</a></p>

<h2 id="结构简介">结构简介</h2>
<p>访问一个thinkphp结构网站的全部url是<code class="highlighter-rouge">http://域名/index.php/模块名/控制器名/操作(即函数名)/参数</code>,<br />
对应的文件结构示例如:<br />
<img src="/uploads/2017/11/thinkphp.PNG" alt="" /></p>

<p>更详细的文件结构如下</p>

<h2 id="主目录">主目录</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>www  WEB部署目录（或者子目录）
├─index.php       入口文件
├─README.md       README文件(说明，可删)
├─composer.json   Composer定义文件(说明，可删)
├─Application     应用目录
├─Public          资源文件目录
├─ThinkPHP        框架(framework)目录
└─其他自定义目录
</code></pre></div></div>

<h2 id="入口文件indexphp">入口文件<code class="highlighter-rouge">index.php</code></h2>
<p>实例，根据实例我们可以看到，入口文件的作用就是整个ThinkPHP的主要配置</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="c1">//省略了很多备注</span>
<span class="c1">// 检测PHP环境</span>
<span class="k">if</span> <span class="p">(</span><span class="nb">version_compare</span><span class="p">(</span><span class="kc">PHP_VERSION</span><span class="p">,</span> <span class="s1">'5.3.0'</span><span class="p">,</span> <span class="s1">'&lt;'</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">'require PHP &gt; 5.3.0 !'</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// 开启调试模式 建议开发阶段开启 部署阶段注释或者设为false</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'APP_DEBUG'</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="c1">// 设置目录安全文件</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'DIR_SECURE_FILENAME'</span><span class="p">,</span> <span class="s1">'April4U.html'</span><span class="p">);</span>
<span class="c1">// 定义应用目录</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'APP_PATH'</span><span class="p">,</span> <span class="s1">'./Application/'</span><span class="p">);</span>
<span class="c1">//默认模块</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'DEFAULT_MODULE'</span><span class="p">,</span><span class="s1">'Home'</span><span class="p">);</span>
<span class="c1">//主题目录</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'TMPL_PATH'</span><span class="p">,</span> <span class="s1">'./Theme/'</span><span class="p">);</span>
<span class="c1">// 引入ThinkPHP入口文件</span>
<span class="k">require</span> <span class="s1">'./ThinkPHP/ThinkPHP.php'</span><span class="p">;</span>
<span class="c1">// 亲^_^ 后面不需要任何代码了 就是如此简单</span>
</code></pre></div></div>

<h2 id="应用模块目录">应用/模块目录</h2>
<p>由入口文件中的<code class="highlighter-rouge">define('APP_PATH','./Application/');</code>参数决定
<br /> 默认为<code class="highlighter-rouge">Application</code>，示例</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Application
├─Common         应用公共模块
│  ├─Common      应用公共函数目录
│  └─Conf        应用公共配置文件目录 //所有模块的公共配置目录，下面会详细说明
├─Home           默认生成的Home模块
│  ├─Conf        模块配置文件目录  //模块自身的配置目录,即该模块的控制器的公共配置目录
│  ├─Common      模块函数公共目录  
│  ├─Controller  模块控制器目录
│  ├─Model       模块模型目录
│  └─View        模块视图文件目录
├─Runtime        运行时目录
│  ├─Cache       模版缓存目录
│  ├─Data        数据目录
│  ├─Logs        日志目录
│  └─Temp        缓存目录模块设计
├─admin          自己开发的模块目录等
│  ├─Conf        配置文件目录
│  ├─Common      公共函数目录
│  └─Controller  控制器目录 
├─...更多自己开发的模块
</code></pre></div></div>
<h3 id="默认模块">默认模块</h3>
<p>默认模块是<code class="highlighter-rouge">Home</code>,可在入口文件中绑定</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 绑定入口文件到Admin模块访问
define('BIND_MODULE','Admin');
</code></pre></div></div>
<p><br />也可绑定运行目录</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 定义运行时目录
define('RUNTIME_PATH','./Runtime/');
</code></pre></div></div>

<p>运行目录需给 <code class="highlighter-rouge">www-data</code>(ubuntu系统)或<code class="highlighter-rouge">www</code>(centos系统)用户写入的权限</p>

<h3 id="应用公共模块common">应用公共模块<code class="highlighter-rouge">Common</code></h3>
<p>示例目录结构</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./Application/Common
├── Common
│   └── index.html
├── Conf
│   ├── config.php
│   └── index.html
└── index.html
</code></pre></div></div>

<p><code class="highlighter-rouge">./Application/Common</code>
内含公共配置文件<code class="highlighter-rouge">config.php</code>，类似于模块的全局配置，如在里面配置了数据库，则其他模块可以直接使用该配置<br />也可以在各自的<code class="highlighter-rouge">./Application/模块名/Conf/config.php</code>里面配置，即为局部配置</p>

<h3 id="模块内部结构">模块内部结构</h3>
<p>每一个模块又有类似下面的结构</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├─模块目录
 ├─Conf        配置文件目录
 ├─Common      公共函数目录
 ├─Controller  控制器目录
 ├─Model       模型目录
 ├─Logic       逻辑目录（可选）
 ├─Service     服务目录（可选）
</code></pre></div></div>
<h4 id="conf配置文件目录"><code class="highlighter-rouge">Conf</code>配置文件目录</h4>
<p>每个应用模块都有独立的配置文件（位于模块目录的<code class="highlighter-rouge">Conf/config.php</code>）</p>
<blockquote>
  <p>配置文件的定义格式支持PHP/JSON/YAML/INI/XML等方式，默认采用<strong>PHP数组定义</strong></p>
</blockquote>

<p>例如：刚下载的ThinkPHP3的<code class="highlighter-rouge">./Application/Home/Conf/config.php</code>文件内容</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">return</span> <span class="k">array</span><span class="p">(</span>
        <span class="c1">//'配置项'=&gt;'配置值'</span>
<span class="p">);</span>
</code></pre></div></div>
<blockquote>
  <p>PHP数组 <code class="highlighter-rouge">arrary('key1'=&gt;'value1','key2'=&gt;'value2')</code>,添加配置项目，只要在数组内添加：<code class="highlighter-rouge">'配置参数'=&gt;'配置值'</code>
 <br />配置值可以支持包括字符串、数字、布尔值和数组在内的数据
 <br />通常我们建议配置参数均使用大写定义。
 <br />也可使用其他类型的配置文件,略</p>
</blockquote>

<h4 id="控制器">控制器</h4>
<p>每个模块都有控制器，在<code class="highlighter-rouge">模块/Controller</code>文件夹内</p>
<blockquote>
  <p>控制器的作用:控制器是网站的入口，可以理解为生成网站的，ThinkPHP默认有一个入口，但是一般情况下一个网站拥有两个入口，如个人博客网站，一个前端入口供游客访问各个博客内容页面，一个后端入口，博客网站主人用来发布、修改、删除文章等，后端入口显然越隐蔽越好，还要加上身份验证，以防游客知道了胡乱对博客进行修改。</p>
</blockquote>

<p>需要为每个控制器定义一个控制器类需要为每个控制器定义一个控制器类
<br />类的命名格式<code class="highlighter-rouge">xxxController.class.php</code>,其中<code class="highlighter-rouge">xxx</code>为控制器的名字，并且首字母要大写
<br />类中含有很多函数，不同的函数负责生成不同的页面等功能，如网站不同导航栏对应的内容对应不同的函数</p>

<p>例如刚安装的ThinkPHP的默认控制器<code class="highlighter-rouge">/Application/Home/Controller/IndexController.class.php</code>,里面就有生成主页的函数<code class="highlighter-rouge">index</code></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kn">namespace</span> <span class="nn">Home\Controller</span><span class="p">;</span>

<span class="kn">use</span> <span class="nn">Think\Controller</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">IndexController</span> <span class="k">extends</span> <span class="nx">Controller</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">show</span><span class="p">(</span><span class="s1">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版
本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="p">,</span><span class="s1">'utf-8'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>我们也可以在里面添加其他的函数，使用url调用
<br />
一个正常的url<code class="highlighter-rouge">http://域名/index.php/模块名/控制器名/操作(即函数名)/参数</code>,不过设置了默认的模块，控制器名就省略很多部分不写，例如
<br />
我们直接访问入口文件<code class="highlighter-rouge">http://域名/index.php</code>的话，由于URL中没有模块、控制器和操作，因此系统会访问默认模块（<code class="highlighter-rouge">Home</code>）下面的默认控制器（<code class="highlighter-rouge">Index</code>）的默认操作（<code class="highlighter-rouge">index</code>），因此与<code class="highlighter-rouge">http://域名/index.php/Home/Index/index/</code>的访问是等效的：</p>

<p>具体的url规则如下</p>
<h3 id="url规则">URL规则</h3>
<blockquote>
  <p>ThinkPHP采用单一入口模式访问应用，对应用的所有请求都定向到应用的入口文件，系统会从URL参数中解析当前请求的模块、控制器和操作，下面是一个标准的URL访问格式：
 <br /><code class="highlighter-rouge">http://serverName/index.php/模块/控制器/操作</code></p>
</blockquote>

<p>ThinkPHP支持的URL模式有四种：普通模式、PATHINFO、REWRITE和兼容模式。</p>

<h4 id="1-普通模式">1 普通模式</h4>
<p>普通模式也就是使用传统的GET传参方式来指定当前访问的模块、控制器和操作，例如：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/?m=home&amp;c=index&amp;a=hello&amp;name=thinkphp
</code></pre></div></div>
<p>m参数表示模块，c表示控制器，a表示操作(即函数名)（当然，这些参数名是可以配置的），后面的表示其他GET参数。
<br />默认值可以不传，因此下面的URL访问是和上面的等效：<br /></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/?a=hello&amp;name=thinkphp
</code></pre></div></div>

<h4 id="2-pathinfo模式">2 PATHINFO模式</h4>
<p>PATHINFO模式是系统的默认URL模式，提供了最好的SEO支持，系统内部已经做了环境的兼容处理，所以能够支持大多数的主机环境。<br />
对应上面的URL模式，PATHINFO模式下面的URL访问地址是：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/index.php/home/index/hello/name/thinkphp/
</code></pre></div></div>
<p>PATHINFO地址的前三个参数分别表示<code class="highlighter-rouge">模块/控制器/操作(即函数名)/</code>，之后跟着操作(函数)的参数。<br />
PATHINFO模式下面，也可以用普通模式的参数方式传入参数，例如：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/index.php/home/index/hello?name=thinkphp
</code></pre></div></div>
<p>即<code class="highlighter-rouge">/name/thinkphp/</code>等价于<code class="highlighter-rouge">?name=thinkphp</code><br />
PATHINFO模式下面，URL参数分隔符是可定制的，例如，通过下面的配置：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'URL_PATHINFO_DEPR'=&gt;'-',// 更改PATHINFO参数分隔符
</code></pre></div></div>
<p>我们可以支持下面的URL访问：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/index.php/home-index-hello-name-thinkphp
</code></pre></div></div>

<h4 id="3-rewrite模式">3 REWRITE模式</h4>
<p>REWRITE模式是在PATHINFO模式的基础上添加了重写规则的支持，可以去掉URL地址里面的入口文件index.php，但是需要额外配置WEB服务器的重写规则。<br />
如果是Apache则需要在入口文件的同级添加<code class="highlighter-rouge">.htaccess</code>文件(注意linux里，.开头的文件是隐藏文件，用<code class="highlighter-rouge">ls -all</code>查看)，内容如下:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;IfModule mod_rewrite.c&gt;
RewriteEngine on
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]
&lt;/IfModule&gt;
</code></pre></div></div>
<p>接下来就可以使用下面的URL地址访问了</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/home/index/hello/name/thinkphp/
</code></pre></div></div>

<h4 id="4-兼容模式">4 兼容模式</h4>
<p>兼容模式是用于不支持PATHINFO的特殊环境，URL地址是：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/?s=/home/index/hello/name/thinkphp
</code></pre></div></div>
<p>兼容模式配合Web服务器重写规则的定义，可以达到和REWRITE模式一样的URL效果。</p>

:ET