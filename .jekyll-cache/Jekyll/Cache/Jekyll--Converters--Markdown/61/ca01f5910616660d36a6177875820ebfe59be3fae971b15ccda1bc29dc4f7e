I"n<ul id="markdown-toc">
  <li><a href="#依赖关系" id="markdown-toc-依赖关系">依赖关系</a></li>
  <li><a href="#下载" id="markdown-toc-下载">下载</a></li>
  <li><a href="#如果编译gcc" id="markdown-toc-如果编译gcc">如果编译gcc</a></li>
  <li><a href="#libxc-200" id="markdown-toc-libxc-200">libXC-2.0.0</a></li>
  <li><a href="#gsl-114" id="markdown-toc-gsl-114">gsl-1.14</a></li>
  <li><a href="#openmpi-1103" id="markdown-toc-openmpi-1103">openmpi-1.10.3</a></li>
  <li><a href="#fftw-333" id="markdown-toc-fftw-333">fftw-3.3.3</a></li>
  <li><a href="#scalapack" id="markdown-toc-scalapack">scalapack</a></li>
  <li><a href="#octopus-412" id="markdown-toc-octopus-412">octopus-4.1.2</a></li>
  <li><a href="#测试" id="markdown-toc-测试">测试</a></li>
  <li><a href="#备注" id="markdown-toc-备注">备注</a></li>
</ul>

<p>编译方法主要参考<a href="https://www.zybuluo.com/sculxb/note/987446#octopus%E5%AE%89%E8%A3%85-%E7%AE%97%E7%9B%98">@sculxb</a><br />
环境centos6.5，软件版本gcc-4.4.7,libXC-2.0.0,gsl-1.14,openmpi-1.10.3,fftw-3.3.3 scalapack-2,octopus-4.1.2<br />
gcc使用系统默认的gcc-4.4.7,其他软件分别编译</p>

<p><br /> <br />
根据<a href="https://linuxcluster.wordpress.com/2015/03/25/basic-configuration-of-octopus-4-1-2-with-openmpi-on-centos-6/">Basic Configuration of Octopus 4.1.2 with OpenMPI on CentOS 6</a>的建议:<br />
octopus-4.1.2只能使用libxc-2.0.x或2.1.x<br />
gsl只能用1.14或更早<br /><br /></p>

<p><br /><strong>遇到的问题:</strong><br />
gcc-4.4.7编译openmpi-1.6.4报错，使用openmpi-1.10.3<br />
gcc-4.8.4编译libxc-2.0.0出错，使用libxc-2.0.3<br />
centos7最后编译octopus时configure没问题，make时报错，解决方案<a href="/2018/09/18/centos7-octopus-4.1.2/">centos7 gun 编译octopus-4.1.2遇到问题和解决方案</a></p>

<h2 id="依赖关系">依赖关系</h2>
<ul>
  <li><strong>使用gcc编译libXC-2.0.0,gsl-1.14,openmpi-1.10.3</strong><br /></li>
  <li><strong>编译openmpi-1.10.3得到的并行编译器(mpicc,mpif90等)和库用于编译fftw-3.3.3 scalapack-2,octopus-4.1.2</strong><br />
因此在测试不同openmpi版本时，不用重新编译libxc和gsl</li>
</ul>

<p>此文直接将在我计算机上的编译过程输入的命令复制了过来，请适当更改</p>

<h2 id="下载">下载</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget http://ftp.gnu.org/gnu/gsl/gsl-1.14.tar.gz
wget http://www.tddft.org/programs/octopus/down.php?file=libxc/2.0.0/libxc-2.0.0.tar.gz
wget https://download.open-mpi.org/release/open-mpi/v1.10/openmpi-1.10.3.tar.gz
wget http://www.netlib.org/scalapack/scalapack_installer.tgz
wget ftp://ftp.fftw.org/pub/fftw/fftw-3.3.3.tar.gz
wget http://www.tddft.org/programs/octopus/down.php?file=4.1.2/octopus-4.1.2.tar.gz
</code></pre></div></div>

<h2 id="如果编译gcc">如果编译gcc</h2>

<p>如果指定某版本的gcc编译器，可以参考<a href="/2018/09/12/gun-openmpi-siesta/">gcc Openmpi 编译siesta</a><br />
编译libXC时要指定FCCPP为gcc-4.8.4的cpp，默认是系统的<code class="highlighter-rouge">/usr/bin/cpp</code></p>

<h2 id="libxc-200">libXC-2.0.0</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ..
tar xzvf libxc-2.0.0.tar.gz 
cd libxc-2.0.0
./configure --prefix=/home/cndaqiang/soft/libxc-2.0.0/ CC=gcc CXX=g++ FC=gfortran
make -j8
make install
export LD_LIBRARY_PATH=/home/cndaqiang/soft/libxc-2.0.0/lib:$LD_LIBRARY_PATH
</code></pre></div></div>

<h2 id="gsl-114">gsl-1.14</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ..
tar xzvf gsl-1.14.tar.gz 
cd gsl-1.14
mkdir build-gsl
cd build-gsl/
../configure --prefix=/home/cndaqiang/soft/gsl-1.14
make -j8
make install
export PATH=/home/cndaqiang/soft/gsl-1.14/bin:$PATH
export LD_LIBRARY_PATH=/home/cndaqiang/soft/gsl-1.14/lib:$LD_LIBRARY_PATH
</code></pre></div></div>

<h2 id="openmpi-1103">openmpi-1.10.3</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tar xzvf openmpi-1.10.3.tar.gz 
cd openmpi-1.10.3
./configure --prefix=/home/cndaqiang/soft/openmpi-1.10.3 CC=gcc FC=gfortran CXX=g++
make -j8
make install
export LD_LIBRARY_PATH=/home/cndaqiang/soft/openmpi-1.10.3/lib:$LD_LIBRARY_PATH
export PATH=/home/cndaqiang/soft/openmpi-1.10.3/bin:$PATH
</code></pre></div></div>

<h2 id="fftw-333">fftw-3.3.3</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ..
tar xzvf fftw-3.3.3.tar.gz 
cd fftw-3.3.3
./configure --prefix=/home/cndaqiang/soft/fftw-3.3.3 --enable-mpi
make -j8
make install
export LD_LIBRARY_PATH=/home/cndaqiang/soft/fftw-3.3.3/lib:$LD_LIBRARY_PATH
export PATH=/home/cndaqiang/soft/fftw-3.3.3/bin:$PATH
</code></pre></div></div>

<h2 id="scalapack">scalapack</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ..
tar xzvf scalapack_installer.tgz 
cd scalapack_installer
./setup.py --prefix=/home/cndaqiang/soft/scalapack --downall
</code></pre></div></div>

<h2 id="octopus-412">octopus-4.1.2</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ..
tar xzvf octopus-4.1.2.tar.gz 
cd octopus-4.1.2
 ./configure --prefix=/home/cndaqiang/soft/octopus-4.1.2 --with-blas='-L/home/cndaqiang/soft/scalapack/lib -lrefblas' --with-lapack='-L/home/cndaqiang/soft/scalapack/lib -ltmg -lreflapack' --with-scalapack='-L/home/cndaqiang/soft/scalapack/lib -lscalapack' --with-libxc-prefix=/home/cndaqiang/soft/libxc-2.0.0 --with-gsl-prefix=/home/cndaqiang/soft/gsl-1.14  --with-fft-lib=/home/cndaqiang/soft/fftw-3.3.3/lib/libfftw3.a --enable-mpi
make -j8
make install
</code></pre></div></div>

<h2 id="测试">测试</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>EXEC=/home/cndaqiang/soft/octopus-4.1.2/bin/octopus_mpi 
cd ~/soft/octopus-test/
mpirun -np 8 $EXEC  &lt;inp&gt; result
grep rel_dens result
</code></pre></div></div>

<h2 id="备注">备注</h2>
<p>每次运行octopus需执行下列命令，即在交作业脚本中加入以下内容，或者添加到.bashrc</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export LD_LIBRARY_PATH=/home/cndaqiang/soft/openmpi-1.10.3/lib:$LD_LIBRARY_PATH
export PATH=/home/cndaqiang/soft/openmpi-1.10.3/bin:$PATH
export LD_LIBRARY_PATH=/home/cndaqiang/soft/libxc-2.0.0/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/home/cndaqiang/soft/gsl-1.14/lib:$LD_LIBRARY_PATH
export PATH=/home/cndaqiang/soft/gsl-1.14/bin:$PATH
export LD_LIBRARY_PATH=/home/cndaqiang/soft/fftw-3.3.3/lib:$LD_LIBRARY_PATH
export PATH=/home/cndaqiang/soft/fftw-3.3.3/bin:$PATH
</code></pre></div></div>

:ET