I"<ul id="markdown-toc">
  <li><a href="#参考" id="markdown-toc-参考">参考</a></li>
  <li><a href="#解压修改" id="markdown-toc-解压修改">解压修改</a>    <ul>
      <li><a href="#makefileinclude-文件修改" id="markdown-toc-makefileinclude-文件修改"><code class="highlighter-rouge">makefile.include</code> 文件修改</a></li>
    </ul>
  </li>
  <li><a href="#编译" id="markdown-toc-编译">编译</a></li>
  <li><a href="#运行" id="markdown-toc-运行">运行</a></li>
  <li><a href="#benchmark" id="markdown-toc-benchmark">Benchmark</a></li>
</ul>

<p>很多内容不解释了，前提工作同<a href="/2018/01/15/intel-mpi-vasp/">Intel Parallel Studio XE 编译VASP</a><br />
按照<a href="/2018/01/15/intel-mpi-vasp/">Intel Parallel Studio XE 编译VASP</a>安装编译器<br />
按照<a href="/2019/03/31/cuda/">Centos 7 安装Cuda10 过程记录</a>安装Cuda</p>

<h2 id="参考">参考</h2>
<p><a href="https://www.nvidia.com/en-us/data-center/gpu-accelerated-applications/vasp/">GPU-ACCELERATED VASP</a></p>

<h2 id="解压修改">解压修改</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> tar xzvf vasp.5.4.4.tar.gz 
 cd vasp.5.4.4
 cp arch/makefile.include.linux_intel makefile.include 
 vi makefile.include 
</code></pre></div></div>
<h3 id="makefileinclude-文件修改"><code class="highlighter-rouge">makefile.include</code> 文件修改</h3>

<p>MKL和编译器的配置同<a href="/2018/01/15/intel-mpi-vasp/">Intel Parallel Studio XE 编译VASP</a><br /></p>

<p>cuda配置</p>

<p>针对intel 15 和cuda10<br />
修改CUDA_LIB，指定<code class="highlighter-rouge">-lcublas -lcuda</code>的地址，如<code class="highlighter-rouge">CUDA_LIB   := -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart  -lcufft -L/usr/lib64 -lcuda -lcublas</code><br />
我在安装cuda时自定义了安装目录，因此指定了<code class="highlighter-rouge">-L/home/data/software/usr/local/cuda-10.0/lib64 -lcublas</code></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># GPU Stuff

CPP_GPU    = -DCUDA_GPU -DRPROMU_CPROJ_OVERLAP -DUSE_PINNED_MEMORY -DCUFFT_MIN=28 -UscaLAPACK

OBJECTS_GPU = fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d_gpu.o fftmpiw_gpu.o

CC         = icc
CXX        = icpc
CFLAGS     = -fPIC -DADD_ -Wall -openmp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS

CUDA_ROOT  ?= /usr/local/cuda/
NVCC       := $(CUDA_ROOT)/bin/nvcc -ccbin=icc
CUDA_LIB   := -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart -lcuda -lcufft \
              -L/home/data/software/usr/local/cuda-10.0/lib64 -lcublas

GENCODE_ARCH    := -gencode=arch=compute_30,code=\"sm_30,compute_30\" \
                   -gencode=arch=compute_35,code=\"sm_35,compute_35\" \
                   -gencode=arch=compute_60,code=\"sm_60,compute_60\"

MPI_INC    = $(I_MPI_ROOT)/include64/
</code></pre></div></div>

<p>针对intel19还需更改一处，将<code class="highlighter-rouge">CFLAGS</code>中的<code class="highlighter-rouge">-openmp</code>改为<code class="highlighter-rouge">-oqpenmp</code></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CFLAGS     = -fPIC -DADD_ -Wall -oqpenmp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS
</code></pre></div></div>

<h2 id="编译">编译</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make gpu
</code></pre></div></div>

<p>在<code class="highlighter-rouge">bin</code>目录有GPU版本的vasp生成</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$  ls bin
vasp_gam  vasp_gpu  vasp_ncl  vasp_std
</code></pre></div></div>

<h2 id="运行">运行</h2>
<p>同非GPU版本一样<code class="highlighter-rouge">mpirun -np 核数 vasp_gpu</code>,运行过程</p>

<p>INCAR参数要添加</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>LREAL = .TRUE. or LREAL = A
NCORE = 1
</code></pre></div></div>

<p>运行途中，可以查看显卡的占用
<img src="/uploads/2019/04/vasp-gpu.PNG" alt="" /></p>

<h2 id="benchmark">Benchmark</h2>
<p>在进行大体系计算时，计算速度明显
<img src="/uploads/2019/04/benchmark.JPG" alt="" />
体系从小到大对比<a href="/web/file/2019/GPU-vasp测试.pdf">GPU-vasp测试.pdf</a></p>
:ET